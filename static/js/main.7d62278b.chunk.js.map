{"version":3,"sources":["components/map/map.component.jsx","pages/worldmap/worldmap.page.jsx","components/table/table.component.jsx","pages/country_count_table/country_count_table.page.jsx","components/barchart/barchart.component.jsx","pages/country_count_chart/country_count_chart.page.jsx","pages/indexpage/indexpage.page.jsx","App.js","reportWebVitals.js","index.js"],"names":["LocMap","props","createMap","svg","d3","append","attr","projection","pathGenerator","then","data","countries","feature","objects","selectAll","features","enter","join","long","lat","this","id","React","Component","WorldMap","require","state","locationdata","Object","values","Table","formatData","pairs","formattedData","entries","key","value","console","log","push","name","num","setState","data1","a","b","c","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","tabdata","style","width","title","columns","field","icons","options","filtering","exportButton","CountryCountTable","countrydata","margin","className","color","BarChart","createChart","tickers","height","y","domain","length","rangeRound","x","d","range","format","tickFormat","i","bandwidth","call","g","ticks","select","remove","tickSizeOuter","text","filter","node","CountryCountChart","slice","keys","Index","to","href","App","exact","path","component","IndexPage","CountryTable","CountryChart","LocationsMap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d62278b.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from \"d3\";\r\nimport * as topojson from \"topojson-client\";\r\n\r\n// import { select, json, geoPath, geoNaturalEarth1 } from 'd3';\r\nimport { feature } from 'topojson-client';\r\n\r\n// import './map.styles.css'\r\n\r\n\r\nclass LocMap extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createMap();\r\n    }\r\n\r\n\r\n    createMap = () => {\r\n\r\n\r\n\r\n        const svg = d3.select(\"#location\").append(\"svg\")\r\n            .attr(\"width\", 1000)\r\n            .attr(\"height\", 1000)\r\n            .attr(\"viewBox\", [0, 0, 1000, 1000]);\r\n\r\n\r\n        const projection = d3.geoNaturalEarth1();\r\n        const pathGenerator = d3.geoPath().projection(projection);\r\n\r\n\r\n        // const circles = svg.selectAll('g')\r\n        //     .data(this.props.data)\r\n        //     .join('g');\r\n\r\n        // console.log(this.props.data)\r\n        // circles.append('g')\r\n        //     .attr('transform', ({ long, lat }) => `translate(${projection([long, lat]).join(\",\")})`)\r\n        //     .append('circle')\r\n        //     .attr('r', 10)\r\n        //     .attr('fill', 'red');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        svg.append('path')\r\n            .attr('class', 'sphere')\r\n        // .attr('d', pathGenerator({ type: 'Sphere' }));\r\n        d3.json('https://unpkg.com/world-atlas@1.1.4/world/110m.json')\r\n            .then(data => {\r\n                // console.log(data)\r\n                const countries = feature(data, data.objects.countries);\r\n                svg.selectAll('path').data(countries.features)\r\n                    .enter().append('path')\r\n                    .attr('class', 'country')\r\n                    .attr('d', pathGenerator);\r\n\r\n                    const circles = svg.selectAll('g')\r\n                    .data(this.props.data)\r\n                    .join('g');\r\n        \r\n                // console.log(this.props.data)\r\n                circles.append('g')\r\n                    .attr('transform', ({ long, lat }) => `translate(${projection([long, lat]).join(\",\")})`)\r\n                    .append('circle')\r\n                    .attr('r', 2)\r\n                    .attr('fill', 'red');\r\n        \r\n\r\n            });\r\n\r\n        // const circles = svg.selectAll('g')\r\n        //     .data(this.props.data)\r\n        //     .join('g');\r\n\r\n        // // console.log(this.props.data)\r\n        // circles.append('g')\r\n        //     .attr('transform', ({ long, lat }) => `translate(${projection([long, lat]).join(\",\")})`)\r\n        //     .append('circle')\r\n        //     .attr('r', 10)\r\n        //     .attr('fill', 'red');\r\n            \r\n\r\n\r\n        // svg.node();\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#\" + \"location\"}></div>;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default LocMap;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport LocationsOnMap from '../../components/map/map.component'\r\n\r\nclass WorldMap extends React.Component {\r\n    \r\n    \r\n    constructor() {\r\n        super()   \r\n        const data = require('../../data/example_countries.json');\r\n        this.state = {\r\n          locationdata: Object.values(data['last_hour_locations']),\r\n        }\r\n      }\r\n     \r\n        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                <h1>Locations From Last Hour</h1>\r\n                <div>Red points mark the locations. The data for locations was taken from example_countries.json</div><br></br>\r\n                <LocationsOnMap data={this.state.locationdata} />\r\n                <div id=\"location\"></div>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default WorldMap;\r\n\r\n","import React, { forwardRef } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\n\r\nclass Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: { a: 1, b: 2, c: 3 },\r\n            data1: 0\r\n        }\r\n        // const data = { a: 1, b:2, c:3};\r\n\r\n\r\n\r\n        this.tableIcons = {\r\n            Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n            Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n            Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n            DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n            Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n            Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n            FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n            LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n            NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n            PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n            ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n            Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n            SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n            ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n            ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        // this.createTable();\r\n        console.log(this.props.tabdata)\r\n        this.formatData(this.props.tabdata);\r\n    }\r\n\r\n    formatData = (pairs) => {\r\n        var formattedData = []\r\n        for (const [key, value] of Object.entries(pairs)) {\r\n            console.log(`${key}: ${value}`);\r\n            formattedData.push({ name: key, num: value })\r\n        }\r\n        console.log(formattedData);\r\n        this.setState({ data1: formattedData });\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const cols = [\r\n            {\r\n                title: 'Country', field: 'name',\r\n                // cellStyle: {\r\n                //     width: 20,\r\n                //     maxWidth: 20\r\n                // },\r\n                // headerStyle: {\r\n                //     width: 20,\r\n                //     maxWidth: 20\r\n                // }\r\n            },\r\n            { title: 'Number', field: 'num' }\r\n        ]\r\n\r\n\r\n        return (\r\n            <center>\r\n            <div style={{width: '50%'}}>\r\n                {/* {this.formatData(this.data)} */}\r\n                <MaterialTable\r\n                    title={this.props.title}\r\n                    data={this.state.data1}\r\n                    columns={cols}\r\n                    icons={this.tableIcons}\r\n                    options={{\r\n                        filtering: true,\r\n                        exportButton: true,\r\n\r\n\r\n\r\n\r\n                    }}\r\n\r\n                />\r\n                {/* <MaterialTable title='a table' data={this.state.data1} columns={cols}/> */}\r\n\r\n            </div>\r\n            </center>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Table;","import React from 'react';\r\nimport Table from '../../components/table/table.component'\r\nimport './country_count_table.style.css'\r\n\r\nclass CountryCountTable extends React.Component {\r\n\r\n  constructor() {\r\n    super()\r\n    const data = require('../../data/example_countries.json');\r\n    this.state = {\r\n      data: Object.values(data['country_counts']),\r\n      countrydata: data['country_counts']\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{margin: 50}}>\r\n        \r\n        <div className=\"text1\">\r\n        <h1>Country Count Table</h1>\r\n          <p>\r\n            This data table was made with material-table package. Tables like this one can be rendered along side visualizations or individually on a single page.\r\n          Please notice the powerful features: <p style={{color:'red'}}>filter, search, data export, sort and more.</p></p>\r\n          <br></br>\r\n\r\n          {/* <div className=\"featurelist\">\r\n            <dl>\r\n              <dt>Search</dt>\r\n              <dd>- Entire table can be searched by using the search box on top right.</dd>\r\n              <dt>Column Filters</dt>\r\n              <dd>- The rows can be filtered by values in column. </dd>\r\n              <dt>Sorting</dt>\r\n              <dd>- Columns can be sorted in ascending or descending order. Please hover mouse by the right side of column names and click on the arrow that appears.  </dd>\r\n              <dt>Table Download</dt>\r\n              <dd>- Table can be downloaded in csv or pdf format by clicking the download button at the top right corner of the table.  </dd>\r\n              <dt>Table Download</dt>\r\n              <dd>- Table can be downloaded in csv or pdf format by clicking the download button at the top right corner of the table.  </dd>\r\n              <dt>Row visibility</dt>\r\n              <dd>- The number of rows visible can be chosen with the help of drop down menu at the bottom of the table.  </dd>\r\n            </dl>\r\n          </div> */}\r\n        </div>\r\n\r\n        <br></br><br></br> <br></br>\r\n        <Table title=\"\" tabdata={this.state.countrydata} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CountryCountTable;\r\n\r\n","// import React, { Component } from 'react';\r\n// import * as d3 from \"d3\";\r\n\r\n// class BarChart extends React.Component {\r\n\r\n//     constructor(props) {\r\n//         super(props)\r\n//     }\r\n\r\n//     componentDidMount() {\r\n//         this.createChart();\r\n//     }\r\n\r\n//     createChart = () => {\r\n\r\n//         const margin = { top: 50, bottom: 50, left: 50, right: 50 }\r\n//         const data = this.props.data\r\n\r\n//         const svg = d3.select(\"#barchart\").append(\"svg\")\r\n//             .attr(\"width\", this.props.width)\r\n//             .attr(\"height\", this.props.height)\r\n//             .attr(\"viewBox\", [0, 0, this.props.width, this.props.height])\r\n\r\n\r\n//         const x = d3.scaleBand()\r\n//             .domain(d3.range(data.length))\r\n//             .range([0, this.props.width])\r\n\r\n//         const y = d3.scaleLinear()\r\n//             .domain([0, 25000])\r\n//             .range([this.props.height, 0])\r\n\r\n\r\n//         const h = this.props.height;\r\n\r\n//         svg\r\n//             .selectAll(\"rect\")\r\n//             .data(data)\r\n//             .enter()\r\n//             .append(\"rect\")\r\n//             .attr(\"x\", (d, i) => x(i))\r\n//             .attr(\"y\", (d, i) => y(d))\r\n//             .attr(\"width\", x.bandwidth)\r\n//             .attr(\"height\", d=> y(0) - y(d))\r\n//             .attr(\"fill\", \"green\")\r\n\r\n//         svg.node();\r\n\r\n//     }\r\n\r\n//     render() {\r\n//         return <div id={\"#\" + this.props.id}></div>;\r\n//     }\r\n// }\r\n\r\n// export default BarChart;\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport * as d3 from \"d3\";\r\n\r\nclass BarChart extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.createChart();\r\n    }\r\n\r\n    createChart = () => {\r\n\r\n        const margin = { top: 100, bottom: 100, left: 100, right: 1 }\r\n        const data = this.props.data\r\n        const tickers = this.props.tickers\r\n\r\n        console.log(data)\r\n\r\n        const svg = d3.select(\"#barchart\").append(\"svg\")\r\n            .attr(\"width\", this.props.width)\r\n            .attr(\"height\", this.props.height)\r\n            .attr(\"viewBox\", [0, 0, this.props.width, this.props.height])\r\n\r\n\r\n        const y = d3.scaleBand()\r\n\r\n            .domain(d3.range(data.length))\r\n            // .range([0, this.props.width])\r\n            .rangeRound([margin.top, this.props.height - margin.bottom])\r\n\r\n        const x = d3.scaleLinear()\r\n            .domain([0, d3.max(data, d => d)])\r\n            // .domain([25000, 0])\r\n            .range([margin.left, this.props.width - margin.right])\r\n        //.range([margin.left, this.props.width - margin.right])\r\n\r\n        var xAxis = g => g\r\n            .attr(\"transform\", `translate(0,${margin.top})`)\r\n            .call(d3.axisTop(x).ticks(this.props.width / 80, data.format))\r\n            .call(g => g.select(\".domain\").remove())\r\n\r\n        var yAxis = g => g\r\n            .attr(\"transform\", `translate(${margin.left},0)`)\r\n            .call(d3.axisLeft(y).tickFormat(i => tickers[i]).tickSizeOuter(0))\r\n\r\n        var format = x.tickFormat(20, data.format)\r\n\r\n        const h = this.props.height;\r\n\r\n        svg\r\n            .selectAll(\"rect\")\r\n            .data(data)\r\n            .enter()\r\n            .append(\"rect\")\r\n            .attr(\"y\", (d, i) => y(i))\r\n            .attr(\"x\", x(0))\r\n            // .attr(\"x\", (d, i) => x(d))\r\n            .attr(\"height\", y.bandwidth)\r\n            .attr(\"width\", d => x(d) - x(0))\r\n            // .attr(\"width\", d => x(0) - x(d))\r\n            .attr(\"fill\", \"green\")\r\n\r\n        svg.append(\"g\")\r\n            .call(xAxis);\r\n        svg.append(\"g\")\r\n            .call(yAxis);\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"fill\", \"white\")\r\n            .attr(\"text-anchor\", \"end\")\r\n            .attr(\"font-family\", \"sans-serif\")\r\n            .attr(\"font-size\", 12)\r\n            .selectAll(\"text\")\r\n            .data(data)\r\n            .join(\"text\")\r\n            // .attr(\"x\", 0)\r\n            .attr(\"x\", d => x(d))\r\n            //.attr(\"x\", x(0))\r\n            .attr(\"y\", (d, i) => y(i) + y.bandwidth() / 2)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .attr(\"dx\", -4)\r\n            .text(d => format(d))\r\n            .call(text => text.filter(d => x(d) - x(0) < 600) // short bars\r\n                .attr(\"dx\", +4)\r\n                .attr(\"fill\", \"black\")\r\n                .attr(\"text-anchor\", \"start\"));\r\n\r\n\r\n\r\n        svg.node();\r\n\r\n    }\r\n\r\n    render() {\r\n        return <div id={\"#barchart\"}></div>;\r\n\r\n            \r\n        \r\n    }\r\n}\r\n\r\nexport default BarChart;","import React from 'react';\r\nimport BarChart from '../../components/barchart/barchart.component'\r\n\r\n\r\nclass CountryCountChart extends React.Component {\r\n  \r\n  constructor() {\r\n    super()\r\n  \r\n    const data = require('../../data/example_countries.json');\r\n    // console.log(data);\r\n    // console.log(data['country_counts']);\r\n    // console.log(Object.values(data['country_counts']).slice(1, 10));\r\n  \r\n    this.state = {\r\n      data: Object.values(data['country_counts']).slice(0,50),\r\n      tickers: Object.keys(data['country_counts']).slice(0,50),\r\n      width: 1000,\r\n      height: 1000,\r\n      id: \"barchart\",\r\n      countrydata: data['country_counts']\r\n  \r\n    }\r\n     \r\n  }\r\n   \r\n  \r\n  render() {\r\n    return (\r\n\r\n      <div>\r\n        <center>\r\n        <h1>Country Count Chart</h1>\r\n        <span>This chart shows the top 50 countries by count on a horizontal bar chart. It was made using D3.js using data from example_countries.json.</span>\r\n        <BarChart id= {this.state.id} data={this.state.data} tickers={this.state.tickers} width={this.state.width} height={this.state.height} />\r\n        <div id=\"barchart\"></div>\r\n        </center>\r\n      </div>\r\n\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default CountryCountChart;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './indexpage.style.css'\r\n\r\n\r\nclass Index extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"indexpage1\">\r\n                <center>\r\n                <h1>Sample Components using Kolibri Telemetry Datasets</h1>\r\n                </center>\r\n                <div className=\"indexpage\">\r\n                <span>Please click on links below to see examples of how telemetry data could be visualized and tabulated. </span>\r\n                <span>Routing of this single page app is done using react-router-dom.</span>\r\n                \r\n                <br></br>                                         \r\n                <ul>\r\n                    <li><Link to=\"/locations\">Locations on Map</Link></li>\r\n                    <li><Link to=\"/countrycountchart\">Horizontal Bar Chart for Country Count</Link></li>\r\n                    <li><Link to=\"/countrycounttable\">Data Table</Link></li>\r\n                </ul>\r\n                <p>Source Code: <a href=\"https://github.com/muhammadalics/dataviz_mockup\">GitHub repo</a> </p>\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Index;","import React from 'react';\nimport './App.css';\nimport LocationsMap from './pages/worldmap/worldmap.page'\nimport CountryTable from './pages/country_count_table/country_count_table.page'\nimport CountryChart from './pages/country_count_chart/country_count_chart.page'\nimport IndexPage from './pages/indexpage/indexpage.page'\nimport {Switch, Route} from 'react-router-dom';\n\nclass App extends React.Component {\n\n  constructor() {\n    super()\n\n  }\n\n  render() {\n    return (\n\n\n      <div className=\"App\">\n\n        <Switch>\n          <Route exact path='/' component={IndexPage} />\n          <Route exact path='/countrycounttable' component={CountryTable} />\n          <Route exact path='/countrycountchart' component={CountryChart} />\n          <Route exact path='/locations' component={LocationsMap} />\n        </Switch>\n\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}